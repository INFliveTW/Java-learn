application 啟動類

swagger @configuration標記SwaggerConfig為Spring配置類
SpringDoc自動處理Swagger UI配置

@RestController REST控制器，返回JSON

@RequestManpping("/weather")將端點映射到/weather路徑

@Tag標記API分組為[天氣預報API]

@Value

@GetMapping("/forecast") GET請求 /weather/forecast，接受city

@Operation & @Parameter描述端點與參數，Swagger UI展示

Apache HttpClient調用OpenWeatherMap API，獲取5天天氣預報
返回WeatherResponse物件

@Data(Lombok) 自動生成getter、setter、toString

依賴
org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0

SpringDoc自動提供Swagger UI 靜態資源，無須HTML

SwaggerConfig 使用 @OpenAPIDefinition 定義 API

SpringDoc 註解
@Tag 標記控制器為[天氣預報API]描述
@Operation 描述/weather/forecast功能
@Parameter 描述 city
儲存在/v3/api-docs端點，供Swagger UI

http://localhost:8080/swagger-ui.html

點擊[Try it out] 輸入[city]

Response的WeatherResponse
數據傳輸對象(DTO)，用於天氣預報API
封裝城市名稱(city)和天氣預報數據(forecast)

WeatherController返回類型，結構化API供客戶端解析
WeatherReslonse會顯示在Swagger UI中，幫助了解API輸出

@Data (Lombok) 自動生成getter、setter、toString()
equals()、hashcode() 簡化程式碼

@SpringBootApplication
結合 @Configuration、@EnableAutoConfiguration、@ComponentScan，啟用Spring Boot自動配置和組件掃描
自動檢測並加載Controller、Config...

執行後返回 JSON 數據
"city":"Tokyo","forecast":"..."



